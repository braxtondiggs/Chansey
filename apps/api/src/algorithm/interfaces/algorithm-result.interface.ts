/**
 * Types of signals an algorithm can generate
 */
export enum SignalType {
  BUY = 'BUY',
  SELL = 'SELL',
  HOLD = 'HOLD',
  STOP_LOSS = 'STOP_LOSS',
  TAKE_PROFIT = 'TAKE_PROFIT'
}

/**
 * Trading signal generated by an algorithm
 */
export interface TradingSignal {
  /**
   * Type of signal
   */
  type: SignalType;

  /**
   * Coin symbol or ID
   */
  coinId: string;

  /**
   * Recommended action strength (0-1)
   */
  strength: number;

  /**
   * Suggested price for the action
   */
  price?: number;

  /**
   * Suggested quantity
   */
  quantity?: number;

  /**
   * Confidence level of the signal (0-1)
   */
  confidence: number;

  /**
   * Reason for the signal
   */
  reason: string;

  /**
   * Additional metadata
   */
  metadata?: Record<string, unknown>;
}

/**
 * Chart data for visualization
 */
export interface ChartDataPoint {
  timestamp: Date;
  value: number;
  label?: string;
  metadata?: Record<string, unknown>;
}

/**
 * Result returned by an algorithm execution
 */
export interface AlgorithmResult {
  /**
   * Success status of the execution
   */
  success: boolean;

  /**
   * Trading signals generated
   */
  signals: TradingSignal[];

  /**
   * Chart data for visualization
   */
  chartData?: {
    [key: string]: ChartDataPoint[];
  };

  /**
   * Performance metrics
   */
  metrics?: {
    executionTime: number;
    signalsGenerated: number;
    confidence: number;
    [key: string]: number;
  };

  /**
   * Error message if execution failed
   */
  error?: string;

  /**
   * Additional metadata
   */
  metadata?: Record<string, unknown>;

  /**
   * Timestamp of the execution
   */
  timestamp: Date;
}
