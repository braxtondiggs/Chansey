{
  "endpoint": "GET /api/orders",
  "description": "List orders with filtering, sorting, and pagination (extends existing endpoint)",
  "authentication": "Required (JWT Bearer token)",
  "rateLimit": "100 requests/minute per user",
  "request": {
    "headers": {
      "Authorization": "Bearer <jwt_token>"
    },
    "queryParameters": {
      "exchangeKeyId": "uuid (optional) - Filter by specific exchange",
      "symbol": "string (optional) - Filter by trading pair (e.g., 'BTC/USDT')",
      "status": "string (optional) - Filter by status (open, filled, canceled, etc.)",
      "orderType": "string (optional, NEW) - Filter by order type (market, limit, etc.)",
      "isManual": "boolean (optional, NEW) - Filter manual (true) vs automated (false) orders",
      "startDate": "ISO 8601 timestamp (optional, NEW) - Filter orders created after this date",
      "endDate": "ISO 8601 timestamp (optional, NEW) - Filter orders created before this date",
      "page": "number (optional, default: 1) - Page number for pagination",
      "limit": "number (optional, default: 20, max: 100) - Items per page"
    },
    "examples": {
      "list_all": "/api/orders",
      "manual_orders_only": "/api/orders?isManual=true",
      "open_limit_orders": "/api/orders?status=open&orderType=limit",
      "exchange_orders": "/api/orders?exchangeKeyId=f47ac10b-58cc-4372-a567-0e02b2c3d479",
      "date_range": "/api/orders?startDate=2025-10-01T00:00:00Z&endDate=2025-10-08T23:59:59Z",
      "paginated": "/api/orders?page=2&limit=50"
    }
  },
  "response": {
    "success": {
      "status": 200,
      "body": {
        "data": "Order[]",
        "meta": {
          "currentPage": "number",
          "itemsPerPage": "number",
          "totalItems": "number",
          "totalPages": "number"
        }
      },
      "example": {
        "data": [
          {
            "id": "a1b2c3d4-e5f6-4321-a987-123456789abc",
            "exchangeKeyId": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
            "symbol": "BTC/USDT",
            "orderType": "limit",
            "side": "buy",
            "quantity": 0.01,
            "price": 50000.00,
            "status": "open",
            "isManual": true,
            "exchangeOrderId": "12345678",
            "filledQuantity": 0,
            "fee": null,
            "stopPrice": null,
            "trailingAmount": null,
            "trailingType": null,
            "takeProfitPrice": null,
            "stopLossPrice": null,
            "ocoLinkedOrderId": null,
            "createdAt": "2025-10-08T12:00:00.000Z",
            "updatedAt": "2025-10-08T12:00:00.000Z",
            "exchange": {
              "id": "uuid",
              "name": "Binance US",
              "slug": "binanceus"
            }
          },
          {
            "id": "b2c3d4e5-f6a7-5432-b098-234567890def",
            "exchangeKeyId": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
            "symbol": "ETH/USD",
            "orderType": "market",
            "side": "sell",
            "quantity": 0.5,
            "price": null,
            "status": "filled",
            "isManual": false,
            "exchangeOrderId": "23456789",
            "filledQuantity": 0.5,
            "fee": 1.25,
            "stopPrice": null,
            "trailingAmount": null,
            "trailingType": null,
            "takeProfitPrice": null,
            "stopLossPrice": null,
            "ocoLinkedOrderId": null,
            "createdAt": "2025-10-07T15:30:00.000Z",
            "updatedAt": "2025-10-07T15:30:05.000Z",
            "algorithmActivation": {
              "id": "uuid",
              "algorithmId": "uuid"
            }
          }
        ],
        "meta": {
          "currentPage": 1,
          "itemsPerPage": 20,
          "totalItems": 42,
          "totalPages": 3
        }
      }
    },
    "errors": {
      "400_invalid_filter": {
        "status": 400,
        "body": {
          "statusCode": 400,
          "message": "Invalid order type filter value",
          "error": "Bad Request"
        }
      },
      "401_unauthorized": {
        "status": 401,
        "body": {
          "statusCode": 401,
          "message": "Unauthorized",
          "error": "Unauthorized"
        }
      }
    }
  },
  "sorting": {
    "default": "createdAt DESC (most recent first)",
    "options": [
      "createdAt ASC|DESC",
      "updatedAt ASC|DESC",
      "quantity ASC|DESC",
      "price ASC|DESC"
    ]
  },
  "filtering": {
    "logic": "AND",
    "description": "All query parameters are combined with AND logic",
    "example": "isManual=true&status=open returns only manual orders that are currently open"
  },
  "performance": {
    "target": "< 200ms p95",
    "optimization": [
      "Use indexes: idx_orders_user_status, idx_orders_user_type, idx_orders_manual",
      "Eager load exchange and algorithmActivation relationships (avoid N+1)",
      "Cache exchange metadata (5-min TTL)",
      "Limit max page size to 100 items"
    ]
  },
  "businessRules": {
    "FR-023": "Display all user orders with current status",
    "FR-024": "Show order details (trading pair, side, type, quantity, price, fees, timestamps)",
    "FR-025": "Allow filtering by exchange, status, date range, and trading pair",
    "FR-026": "Distinguish between manual and automated orders",
    "FR-027": "Display orders sorted by most recent first"
  },
  "newFeatures": {
    "orderType_filter": {
      "description": "Filter by specific order type (market, limit, stop_loss, etc.)",
      "example": "?orderType=limit",
      "validation": "Must be valid OrderType enum value"
    },
    "isManual_filter": {
      "description": "Filter manual vs automated orders",
      "example": "?isManual=true",
      "validation": "Must be boolean (true|false)"
    },
    "date_range_filters": {
      "description": "Filter orders by creation date range",
      "example": "?startDate=2025-10-01T00:00:00Z&endDate=2025-10-08T23:59:59Z",
      "validation": "Must be valid ISO 8601 timestamps"
    }
  },
  "responseRelationships": {
    "exchange": {
      "description": "Exchange information for the order",
      "fields": ["id", "name", "slug"],
      "eager_load": true
    },
    "algorithmActivation": {
      "description": "Algorithm activation for automated orders (null for manual)",
      "fields": ["id", "algorithmId"],
      "eager_load": true,
      "condition": "Only included if isManual = false"
    },
    "user": {
      "description": "User information",
      "included": false,
      "reason": "Redundant (already authenticated)"
    }
  }
}
